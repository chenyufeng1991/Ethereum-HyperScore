{
 "code": "",
 "info": {
  "source": "pragma solidity ^0.4.2;\n\n//测试类：该合约不需要迁移\n//供外部调用测试交易方法、常量方法、event的使用\ncontract Test {\n    uint age;\n\n    event SetAge(address sender, uint age);\n    function setAge(uint _age) {\n        age = _age;\n        SetAge(msg.sender, age);\n    }\n\n    function getAge()constant returns(uint) {\n        return age;\n    }\n}\n\n//工具类：该合约不需要迁移\ncontract Utils {\n\n    function stringToBytes32(string memory source)constant internal returns (bytes32 result) {\n    assembly {\n        result := mload(add(source, 32))\n      }\n    }\n\n    function bytes32ToString(bytes32 x)constant internal returns (string) {\n    bytes memory bytesString = new bytes(32);\n    uint charCount = 0;\n    for (uint j = 0; j < 32; j++) {\n        byte char = byte(bytes32(uint(x) * 2 ** (8 * j)));\n        if (char != 0) {\n            bytesString[charCount] = char;\n            charCount++;\n        }\n    }\n    bytes memory bytesStringTrimmed = new bytes(charCount);\n    for (j = 0; j < charCount; j++) {\n        bytesStringTrimmed[j] = bytesString[j];\n    }\n    return string(bytesStringTrimmed);\n    }\n\n}\n\n//主合约：该合约需要迁移\ncontract Score is Utils, Test {\n\n    address owner; //合约的拥有者，银行\n    uint totalIssuedScore; //银行发行的积分总数\n    uint totalSettledScore; //银行已经清算的积分总数\n\n    //交易状态\n    enum TxType{Unknown, Issue, Transfer, Buy, Settle}\n   \n    struct Manager {\n        address managerAddr; //银行管理员address\n        bytes32 phone; //管理员手机\n        bytes32 password; //管理员密码\n        uint issuedScore; //该管理员发行的积分总数\n    }\n\n    struct Customer {\n        address customerAddr; //客户address\n        bytes32 phone; //客户手机\n        bytes32 password; //客户密码\n        uint score; //积分余额\n        bytes32[] buyGoods; //购买的商品数组\n    }\n\n    struct Merchant {\n        address merchantAddr; //商户address\n        bytes32 phone; //商户手机\n        bytes32 password; //商户密码\n        uint score; //积分余额\n        bytes32[] sellGoods; //发布的商品数组\n    }\n\n    struct Good {\n        bytes32 goodId; //商品Id;\n        bytes32 goodName; //商品名称；\n        uint goodPrice; //价格；\n        address merchantAddr; //商品属于哪个商户address；\n    }\n\n    struct Transaction {\n        bytes32 txHash; //交易hash\n        TxType txType; //交易状态\n        bytes32 sender; //发送者手机号\n        bytes32 receiver; //接收者手机号\n        uint score; //积分数量\n    }\n\n    mapping (address=>Customer) customer; \n    mapping (bytes32=>address) customerPhone; //根据用户手机查找账户address\n\n    mapping (address=>Merchant) merchant; \n    mapping (bytes32=>address) merchantPhone; //根据商户手机查找账户address\n\n    mapping (address=>Manager) manager;\n    mapping (bytes32=>address) managerPhone; //根据管理员手机查找账户address\n\n    mapping (bytes32=>Good) good; //根据商品Id查找该件商品\n\n    mapping (bytes32=>Transaction) transaction; //根据交易hash查找交易\n\n    address[] customerAddrs; //已注册的客户地址数组\n    bytes32[] customerPhones; //已注册的客户手机数组\n\n    address[] merchantAddrs; //已注册的商户地址数组\n    bytes32[] merchantPhones; //已注册的商户手机数组\n\n    address[] managerAddrs; //已注册的管理员地址数组\n    bytes32[] managerPhones; //已注册的管理员手机数组\n\n    bytes32[] goods; //已经上线的商品id数组\n\n    bytes32[] transactions; //所有涉及积分的交易hash\n\n    //增加权限控制，某些方法只能由合约的创建者调用\n    modifier onlyOwner(){\n        if(msg.sender != owner) throw;\n        _;\n    }\n\n    //构造函数\n    function Score() {\n        owner = msg.sender;\n    }\n\n    //注册一个银行管理员\n    event RegisterManager(address sender, uint statusCode, string message);\n    function registerManager(address _managerAddr, \n        string _phone, \n        string _password) {\n        bytes32 tempPhone = stringToBytes32(_phone);\n        bytes32 tempPassword = stringToBytes32(_password);\n\n        //判断该账号是否已经注册\n        if(!isManagerAlreadyRegister(_phone)) {\n            //还未注册\n            manager[_managerAddr].managerAddr = _managerAddr;\n            manager[_managerAddr].phone = tempPhone;\n            manager[_managerAddr].password = tempPassword;\n\n            managerPhone[tempPhone] = _managerAddr;\n            managerAddrs.push(_managerAddr);\n            managerPhones.push(tempPhone);\n\n            RegisterManager(msg.sender, 0, \"管理员注册成功\");\n            return;\n        }\n        else {\n            //已经注册\n            RegisterManager(msg.sender, 1, \"该管理员已经注册\");\n            return;\n        }\n    }\n\n    //登录一个银行管理员\n    event LoginManager(address sender, uint statusCode, string message);\n    function loginManager(string _phone, \n        string _password) {\n        //判断是否已经注册\n        if(isManagerAlreadyRegister(_phone)) {\n            //已经注册，可以进行登录操作\n            address tempAddr = managerPhone[stringToBytes32(_phone)];\n            if(stringToBytes32(_password) == manager[tempAddr].password) {\n                //登录成功\n                LoginManager(msg.sender, 0, \"管理员登录成功\");\n                return;\n            }\n            else {\n                //登录失败\n                LoginManager(msg.sender, 1, \"管理员密码错误，登录失败\");\n                return;\n            }\n        }\n        else {\n            //还未注册\n            LoginManager(msg.sender, 1, \"该管理员未注册，请确认后登录\");\n            return;\n        }\n    }\n\n    //查询银行管理员的详细信息,已登录的管理员调用\n    function getManagerInfo(string _phone)constant returns(address, bytes32, uint, uint, uint) {\n        address tempAddr = managerPhone[stringToBytes32(_phone)];\n        return (manager[tempAddr].managerAddr, manager[tempAddr].phone, manager[tempAddr].issuedScore, totalIssuedScore, totalSettledScore);\n    }\n\n    //注册一个客户\n    event RegisterCustomer(address sender, uint statusCode, string message);\n    function registerCustomer(address _customerAddr, \n        string _phone, \n        string _password) {\n        bytes32 tempPhone = stringToBytes32(_phone);\n        bytes32 tempPassword = stringToBytes32(_password);\n\n        //判断是否已经注册\n        if(!isCustomerAlreadyRegister(_phone)) {\n            //还未注册\n            customer[_customerAddr].customerAddr = _customerAddr;\n            customer[_customerAddr].phone = tempPhone;\n            customer[_customerAddr].password = tempPassword;\n\n            customerPhone[tempPhone] = _customerAddr;\n            customerAddrs.push(_customerAddr);\n            customerPhones.push(tempPhone);\n            RegisterCustomer(msg.sender, 0, \"用户注册成功\");\n            return;\n        }\n        else {\n            RegisterCustomer(msg.sender, 1, \"该用户已经注册\");\n            return;\n        }\n    }\n\n    //登录一个客户\n    event LoginCustomer(address sender, uint statusCode, string message);\n    function loginCustomer(string _phone, \n        string _password) {\n        //判断是否已经注册\n        if(isCustomerAlreadyRegister(_phone)) {\n            //已经注册，可以进行登录操作\n            address tempAddr = customerPhone[stringToBytes32(_phone)];\n            if(stringToBytes32(_password) == customer[tempAddr].password) {\n                //登录成功\n                LoginCustomer(msg.sender, 0, \"用户登录成功\");\n                return;\n            }\n            else {\n                //登录失败\n                LoginCustomer(msg.sender, 1, \"用户密码错误，登录失败\");\n                return;\n            }\n        }\n        else {\n            //还未注册\n            LoginCustomer(msg.sender, 1, \"该用户未注册，请确认后登录\");\n            return;\n        }\n    }\n\n    //查询客户的详细信息,已登录的用户调用\n    function getCustomerInfo(string _phone)constant returns(address, bytes32, uint) {\n        address tempAddr = customerPhone[stringToBytes32(_phone)];\n        return (customer[tempAddr].customerAddr, customer[tempAddr].phone, customer[tempAddr].score);\n    }\n\n\n    //注册一个商户\n    event RegisterMerchant(address sender, uint statusCode, string message);\n    function registerMerchant(address _merchantAddr, \n        string _phone, \n        string _password) {\n        bytes32 tempPhone = stringToBytes32(_phone);\n        bytes32 tempPassword = stringToBytes32(_password);\n\n        //判断是否已经注册\n        if(!isMerchantAlreadyRegister(_phone)) {\n            //还未注册\n            merchant[_merchantAddr].merchantAddr = _merchantAddr;\n            merchant[_merchantAddr].phone = tempPhone;\n            merchant[_merchantAddr].password = tempPassword;\n\n            merchantPhone[tempPhone] = _merchantAddr;\n            merchantAddrs.push(_merchantAddr);\n            merchantPhones.push(tempPhone);\n            RegisterMerchant(msg.sender, 0, \"商户注册成功\");\n            return;\n        }\n        else {\n            RegisterMerchant(msg.sender, 1, \"该商户已经注册\");\n            return;\n        }\n    }\n\n    //登录一个商户\n    event LoginMerchant(address sender, uint statusCode, string message);\n    function loginMerchant(string _phone, \n        string _password) {\n        //判断是否已经注册\n        if(isMerchantAlreadyRegister(_phone)) {\n            //已经注册，可以进行登录操作\n            address tempAddr = merchantPhone[stringToBytes32(_phone)];\n            if(stringToBytes32(_password) == merchant[tempAddr].password) {\n                //登录成功\n                LoginMerchant(msg.sender, 0, \"商户登录成功\");\n                return;\n            }\n            else {\n                //登录失败\n                LoginMerchant(msg.sender, 1, \"商户密码错误，登录失败\");\n                return;\n            }\n        }\n        else {\n            //还未注册\n            LoginMerchant(msg.sender, 1, \"该商户未注册，请确认后登录\");\n            return;\n        }\n    }\n\n    //查询商户的详细信息,已登录的商户调用\n    function getMerchantInfo(string _phone)constant returns(address, bytes32, uint) {\n        address tempAddr = merchantPhone[stringToBytes32(_phone)];\n        return (merchant[tempAddr].merchantAddr, merchant[tempAddr].phone, merchant[tempAddr].score);\n    }\n\n    //判断一个管理员是否已经注册\n    function isManagerAlreadyRegister(string _phone)internal returns(bool) {\n        bytes32 tempPhone = stringToBytes32(_phone);\n        for(uint i = 0; i < managerPhones.length; i++) {\n            if(managerPhones[i] == tempPhone) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //判断一个客户是否已经注册\n    function isCustomerAlreadyRegister(string _phone)internal returns(bool) {\n        bytes32 tempPhone = stringToBytes32(_phone);\n        for(uint i = 0; i < customerPhones.length; i++) {\n            if(customerPhones[i] == tempPhone) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //判断一个商户是否已经注册\n    function isMerchantAlreadyRegister(string _phone)internal returns(bool) {\n        bytes32 tempPhone = stringToBytes32(_phone);\n        for(uint i = 0; i < merchantPhones.length; i++) {\n            if(merchantPhones[i] == tempPhone) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    //管理员发送积分给客户,只能发送给客户\n    event IssueScore(address sender, uint statusCode, string message);\n    function issueScore(string _managerPhone ,\n        string _customerPhone, \n        uint _score)onlyOwner {\n        bytes32 tempManagerPhone = stringToBytes32(_managerPhone);\n        bytes32 tempCustomerPhone = stringToBytes32(_customerPhone);\n\n        if(isCustomerAlreadyRegister(_customerPhone)) {\n            //已经注册\n            address tempManagerAddr = managerPhone[tempManagerPhone];\n            address tempCustomerAddr = customerPhone[tempCustomerPhone];\n            \n            totalIssuedScore += _score;\n            customer[tempCustomerAddr].score += _score;\n            manager[tempManagerAddr].issuedScore += _score;\n            IssueScore(msg.sender, 0, \"发行积分成功\");\n            return;\n        }\n        else {\n            //还没注册\n            IssueScore(msg.sender, 1, \"该账户未注册，发行积分失败\");\n            return;\n        }\n    }\n\n    //商户和银行之间清算积分\n    event SettleScore(address sender, uint statusCode, string message);\n    function settleScore(string _phone, \n        uint _score) {\n        bytes32 tempPhone = stringToBytes32(_phone);\n        address tempAddr = merchantPhone[tempPhone];\n        if(merchant[tempAddr].score >= _score) {\n            //可以清算\n            merchant[tempAddr].score -= _score;\n            totalSettledScore += _score;\n            SettleScore(msg.sender, 0, \"商户积分清算成功\");\n            return;\n        }\n        else {\n            //余额不足，清算失败\n            SettleScore(msg.sender, 1, \"积分余额不足，清算失败\");\n            return;\n        }\n    }\n\n    //两个账户转移积分，任意两个账户之间都可以转移，客户商户都调用该方法\n    //_senderType表示调用者类型，0表示客户，1表示商户\n    event TransferScore(address sender, uint statusCode, string message);\n    function transferScore(uint _senderType, \n        string _sender, \n        string _receiver, \n        uint _score) {\n\n        if(!isCustomerAlreadyRegister(_receiver) && !isMerchantAlreadyRegister(_receiver)){\n            //目的账户不存在\n            TransferScore(msg.sender, 1, \"目标账户不存在，请确认后再转移！\");\n            return;\n        }\n\n        bytes32 tempSenderPhone = stringToBytes32(_sender);\n        bytes32 tempReceiverPhone = stringToBytes32(_receiver);\n        address tempSenderAddr;\n        address tempReceiverAddr;\n\n        if(_senderType == 0) {\n            //客户转移\n            tempSenderAddr = customerPhone[tempSenderPhone];\n            if(customer[tempSenderAddr].score >= _score) {\n                customer[tempSenderAddr].score -= _score;\n\n                if(isCustomerAlreadyRegister(_receiver)) {\n                    //目的地址是客户\n                    tempReceiverAddr = customerPhone[tempReceiverPhone];\n                    customer[tempReceiverAddr].score += _score;\n                }\n                else {\n                    //目的地址是商户\n                    tempReceiverAddr = merchantPhone[tempReceiverPhone];\n                    merchant[tempReceiverAddr].score += _score;\n                }\n                TransferScore(msg.sender, 0, \"积分转让成功！\");\n                return;\n            }\n            else {\n                TransferScore(msg.sender, 1, \"你的积分余额不足，转让失败！\");\n                return;\n            }\n        }\n        else {\n            //商户转移\n            tempSenderAddr = merchantPhone[tempSenderPhone];\n            if(merchant[tempSenderAddr].score >= _score) {\n                merchant[tempSenderAddr].score -= _score;\n                if(isCustomerAlreadyRegister(_receiver)) {\n                    //目的地址是客户\n                    tempReceiverAddr = customerPhone[tempReceiverPhone];\n                    customer[tempReceiverAddr].score += _score;\n                }\n                else {\n                    //目的地址是商户\n                    tempReceiverAddr = merchantPhone[tempReceiverPhone];\n                    merchant[tempReceiverAddr].score += _score;\n                }\n                TransferScore(msg.sender, 0, \"积分转让成功！\");\n                return;\n            }\n            else {\n                TransferScore(msg.sender, 1, \"你的积分余额不足，转让失败！\");\n                return;\n            }\n        }\n    }\n\n    //商户添加一件商品\n    event AddGood(address sender, uint statusCode, string message);\n    function addGood(string _phone,\n        string _goodId,\n        string _goodName,\n        uint _goodPrice) {\n        bytes32 tempPhone = stringToBytes32(_phone);\n        bytes32 tempGoodId = stringToBytes32(_goodId);\n        bytes32 tempName = stringToBytes32(_goodName);\n        address tempMerchantAddr = merchantPhone[tempPhone];\n\n        //首先判断该商品Id是否已经存在\n        if(!isGoodAlreadyAdd(_goodId)) {\n            good[tempGoodId].goodId = tempGoodId;\n            good[tempGoodId].goodName = tempName;\n            good[tempGoodId].goodPrice = _goodPrice;\n            good[tempGoodId].merchantAddr = tempMerchantAddr;\n\n            goods.push(tempGoodId);\n            merchant[tempMerchantAddr].sellGoods.push(tempGoodId);\n            AddGood(msg.sender, 0, \"商户添加商品成功\");\n            return;\n        }\n        else {\n            AddGood(msg.sender, 1, \"该件商品已经添加，请确认后操作\");\n            return;\n        }\n    }\n\n    //首先判断输入的商品Id是否存在\n    function isGoodAlreadyAdd(string _goodId)internal returns(bool) {\n        bytes32 tempGoodId = stringToBytes32(_goodId);\n        for(uint i = 0; i < goods.length; i++) {\n            if(goods[i] == tempGoodId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //商户查找自己的商品数组\n    function getGoodsByMerchant(string _phone)constant returns(bytes32[]) {\n        bytes32 tempPhone = stringToBytes32(_phone);\n        address tempMerchantAddr = merchantPhone[tempPhone];\n        return merchant[tempMerchantAddr].sellGoods;\n    }\n\n    //用户用积分购买一件商品,后台需要获得商品价格，使用event返回\n    event BuyGood(address sender, uint statusCode, string message, uint goodPrice, bytes32 merchantPhone);\n    function buyGood(string _phone,\n        string _goodId) {\n        //首先判断输入的商品Id是否存在\n        bytes32 tempGoodId = stringToBytes32(_goodId);\n        bytes32 tempPhone = stringToBytes32(_phone);\n        address customerAddr = customerPhone[tempPhone];\n        address merchantAddr = good[tempGoodId].merchantAddr;\n        bytes32 merchantPhone = merchant[merchantAddr].phone;\n        uint goodPrice = good[tempGoodId].goodPrice;\n\n        if(isGoodAlreadyAdd(_goodId)) {\n            //该件商品已经添加，可以购买\n            if(customer[customerAddr].score >= goodPrice) {\n                customer[customerAddr].score -= goodPrice;\n                merchant[merchantAddr].score += goodPrice;\n                customer[customerAddr].buyGoods.push(tempGoodId);\n\n                BuyGood(msg.sender, 0, \"用户购买商品成功\", goodPrice, merchantPhone);\n                return;\n            }\n            else {\n                //对这里的方法抽取\n                BuyGood(msg.sender, 1, \"余额不足，购买商品失败\", goodPrice, merchantPhone);\n                return;\n            }\n        }\n        else {\n            //没有这个Id的商品\n            BuyGood(msg.sender, 1, \"输入商品Id不存在，请确定后购买\", goodPrice, merchantPhone);\n            return;\n        }\n    }\n\n    //客户查找自己已购买的商品数组\n    function getGoodsByCustomer(string _phone)constant returns(bytes32[]) {\n        bytes32 tempPhone = stringToBytes32(_phone);\n        address tempCustomerAddr = customerPhone[tempPhone];\n        return customer[tempCustomerAddr].buyGoods;\n    }\n\n    //添加一次交易信息，应该是被外部调用的\n    event AddTransaction(address sender, uint statusCode, string message);\n    function addTransaction(bytes32 _txHash,\n        TxType _txType,\n        string _sender,\n        string _receiver,\n        uint _score) {\n        bytes32 tempSenderPhone = stringToBytes32(_sender);\n        bytes32 tempReceiverPhone = stringToBytes32(_receiver);\n\n        transaction[_txHash].txHash = _txHash;\n        transaction[_txHash].txType = _txType;\n        transaction[_txHash].sender = tempSenderPhone;\n        transaction[_txHash].receiver = tempReceiverPhone;\n        transaction[_txHash].score = _score;\n\n        transactions.push(_txHash);\n\n        AddTransaction(msg.sender, 0, \"添加交易成功\");\n    }\n\n    //for contract migrate:setter/getter\n    function getOwner()constant returns(address) {\n        return owner;\n    }\n\n    function setOwner(address _owner) {\n        owner = _owner;\n    }\n\n    function getTotalIssuedScore()constant returns(uint) {\n        return totalIssuedScore;\n    }\n\n    function setTotalIssuedScore(uint _totalIssuedScore) {\n        totalIssuedScore = _totalIssuedScore;\n    }\n\n    function getTotalSettledScore()constant returns(uint) {\n        return totalSettledScore;\n    }\n\n    function setTotalSettledScore(uint _totalSettledScore) {\n        totalSettledScore = _totalSettledScore;\n    }\n\n    //关于客户合约迁移方法\n    function getCustomerAddrs()constant returns(address[]) {\n        return customerAddrs;\n    }\n\n    function setCustomerAddrs(address[] _customerAddrs) {\n        customerAddrs = _customerAddrs;\n    }\n\n    function getCustomerPhones()constant returns(bytes32[]) {\n        return customerPhones;\n    }\n\n    function setCustomerPhones(string _customerPhones) {\n        customerPhones.push(stringToBytes32(_customerPhones));\n    }\n\n    function getMerchantAddrs()constant returns(address[]) {\n        return merchantAddrs;\n    }\n\n    function setMerchantAddrs(address[] _merchantAddrs) {\n        merchantAddrs = _merchantAddrs;\n    }\n\n    function getMerchantPhones()constant returns(bytes32[]) {\n        return merchantPhones;\n    }\n\n    function setMerchantPhones(bytes32[] _merchantPhones) {\n        merchantPhones = _merchantPhones;\n    }\n\n    function getManagerAddrs()constant returns(address[]) {\n        return managerAddrs;\n    }\n\n    function setManagerAddrs(address[] _managerAddrs) {\n        managerAddrs = _managerAddrs;\n    }\n\n    function getManagerPhones()constant returns(bytes32[]) {\n        return managerPhones;\n    }\n\n    function setManagerPhones(bytes32[] _managerPhones) {\n        managerPhones = _managerPhones;\n    }\n\n    function getGoods()constant returns(bytes32[]) {\n        return goods;\n    }\n\n    function setGoods(bytes32[] _goods) {\n        goods = _goods;\n    }\n\n    function getTransactions()constant returns(bytes32[]) {\n        return transactions;\n    }\n\n    function setTransactions(bytes32[] _transactions) {\n        transactions = _transactions;\n    }\n    \n    function getCustomer(address _customerAddr)constant returns(address, bytes32, bytes32, uint, bytes32[]) {\n        return (customer[_customerAddr].customerAddr, customer[_customerAddr].phone, customer[_customerAddr].password, customer[_customerAddr].score, customer[_customerAddr].buyGoods);\n    }\n\n    function setCustomer(address _customerAddr, \n        string _phone, \n        string _password, \n        uint _score, \n        bytes32[] _buyGoods) {\n\n        bytes32 tempPhone = stringToBytes32(_phone);\n        bytes32 tempPassword = stringToBytes32(_password);\n\n        customer[_customerAddr].customerAddr = _customerAddr;\n        customer[_customerAddr].phone = tempPhone;\n        customer[_customerAddr].password = tempPassword;\n        customer[_customerAddr].score = _score;\n        customer[_customerAddr].buyGoods = _buyGoods;\n    }\n\n    function getCustomerPhone(string _customerPhone)constant returns(address) {\n        bytes32 tempCustomerPhone = stringToBytes32(_customerPhone);\n        return (customerPhone[tempCustomerPhone]);\n    }\n\n    function setCustomerPhone(string _customerPhone, \n        address _customerAddr) {\n        bytes32 tempCustomerPhone = stringToBytes32(_customerPhone);\n        customerPhone[tempCustomerPhone] = _customerAddr;\n    }\n    \n    function getMerchant(address _merchantAddr)constant returns(address, bytes32, bytes32, uint, bytes32[]) {\n        return (merchant[_merchantAddr].merchantAddr, merchant[_merchantAddr].phone, merchant[_merchantAddr].password, merchant[_merchantAddr].score, merchant[_merchantAddr].sellGoods);\n    }\n\n    function setMerchant(address _merchantAddr, \n        bytes32 _phone, \n        bytes32 _password, \n        uint _score, \n        bytes32[] _sellGoods) {\n        merchant[_merchantAddr].merchantAddr = _merchantAddr;\n        merchant[_merchantAddr].phone = _phone;\n        merchant[_merchantAddr].password = _password;\n        merchant[_merchantAddr].score = _score;\n        merchant[_merchantAddr].sellGoods = _sellGoods;\n    }\n    \n    function getMerchantPhone(bytes32 _merchantPhone)constant returns(address) {\n        return merchantPhone[_merchantPhone];\n    }\n\n    function setMerchantPhone(bytes32 _merchantPhone, \n        address _merchantAddr) {\n        merchantPhone[_merchantPhone] = _merchantAddr;\n    }\n    \n    function getManager(address _managerAddr)constant returns(address, bytes32, bytes32, uint) {\n        return(manager[_managerAddr].managerAddr, manager[_managerAddr].phone, manager[_managerAddr].password, manager[_managerAddr].issuedScore);\n    }\n\n    function setManager(address _managerAddr, \n        bytes32 _phone, \n        bytes32 _password, \n        uint _issuedScore) {\n        manager[_managerAddr].managerAddr = _managerAddr;\n        manager[_managerAddr].phone = _phone;\n        manager[_managerAddr].password = _password;\n        manager[_managerAddr].issuedScore = _issuedScore;\n    }\n\n    function getManagerPhone(bytes32 _managerPhone)constant returns(address) {\n        return managerPhone[_managerPhone];\n    }\n\n    function setManagerPhone(bytes32 _managerPhone, \n        address _managerAddr) {\n        managerPhone[_managerPhone] = _managerAddr;\n    }\n    \n    function getGood(bytes32 _goodId)constant returns(bytes32, bytes32, uint, address) {\n        return(good[_goodId].goodId, good[_goodId].goodName, good[_goodId].goodPrice, good[_goodId].merchantAddr);\n    }\n\n    function setGood(bytes32 _goodId, \n        bytes32 _goodName, \n        uint _goodPrice, \n        address _merchantAddr) {\n        good[_goodId].goodId = _goodId;\n        good[_goodId].goodName = _goodName;\n        good[_goodId].goodPrice = _goodPrice;\n        good[_goodId].merchantAddr = _merchantAddr;\n    }\n    \n    function getTransaction(bytes32 _txHash)constant returns(bytes32, TxType, bytes32, bytes32, uint) {\n        return (transaction[_txHash].txHash, transaction[_txHash].txType, transaction[_txHash].sender, transaction[_txHash].receiver, transaction[_txHash].score);\n    }\n\n    function setTransaction(bytes32 _txHash, \n        TxType _txType, \n        bytes32 _sender, \n        bytes32 _receiver, \n        uint _score) {\n        transaction[_txHash].txHash = _txHash;\n        transaction[_txHash].txType = _txType;\n        transaction[_txHash].sender = _sender;\n        transaction[_txHash].receiver = _receiver;\n        transaction[_txHash].score = _score;\n    }\n}\n\n\n\n\n\n\n\n",
  "language": "Solidity",
  "languageVersion": "0",
  "compilerVersion": "0.4.4+commit.4633f3de.Emscripten.clang",
  "abiDefinition": [
   {
    "constant": false,
    "inputs": [
     {
      "name": "_customerPhone",
      "type": "string"
     },
     {
      "name": "_customerAddr",
      "type": "address"
     }
    ],
    "name": "setCustomerPhone",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_owner",
      "type": "address"
     }
    ],
    "name": "setOwner",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_customerAddrs",
      "type": "address[]"
     }
    ],
    "name": "setCustomerAddrs",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getCustomerAddrs",
    "outputs": [
     {
      "name": "",
      "type": "address[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getMerchantAddrs",
    "outputs": [
     {
      "name": "",
      "type": "address[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     },
     {
      "name": "_score",
      "type": "uint256"
     }
    ],
    "name": "settleScore",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_managerAddrs",
      "type": "address[]"
     }
    ],
    "name": "setManagerAddrs",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_txHash",
      "type": "bytes32"
     },
     {
      "name": "_txType",
      "type": "uint8"
     },
     {
      "name": "_sender",
      "type": "bytes32"
     },
     {
      "name": "_receiver",
      "type": "bytes32"
     },
     {
      "name": "_score",
      "type": "uint256"
     }
    ],
    "name": "setTransaction",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     }
    ],
    "name": "getCustomerInfo",
    "outputs": [
     {
      "name": "",
      "type": "address"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "uint256"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_customerAddr",
      "type": "address"
     },
     {
      "name": "_phone",
      "type": "string"
     },
     {
      "name": "_password",
      "type": "string"
     },
     {
      "name": "_score",
      "type": "uint256"
     },
     {
      "name": "_buyGoods",
      "type": "bytes32[]"
     }
    ],
    "name": "setCustomer",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_transactions",
      "type": "bytes32[]"
     }
    ],
    "name": "setTransactions",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_managerPhone",
      "type": "bytes32"
     }
    ],
    "name": "getManagerPhone",
    "outputs": [
     {
      "name": "",
      "type": "address"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     },
     {
      "name": "_goodId",
      "type": "string"
     },
     {
      "name": "_goodName",
      "type": "string"
     },
     {
      "name": "_goodPrice",
      "type": "uint256"
     }
    ],
    "name": "addGood",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     }
    ],
    "name": "getGoodsByCustomer",
    "outputs": [
     {
      "name": "",
      "type": "bytes32[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_managerAddr",
      "type": "address"
     }
    ],
    "name": "getManager",
    "outputs": [
     {
      "name": "",
      "type": "address"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "uint256"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getManagerPhones",
    "outputs": [
     {
      "name": "",
      "type": "bytes32[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_customerPhone",
      "type": "string"
     }
    ],
    "name": "getCustomerPhone",
    "outputs": [
     {
      "name": "",
      "type": "address"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_merchantPhone",
      "type": "bytes32"
     },
     {
      "name": "_merchantAddr",
      "type": "address"
     }
    ],
    "name": "setMerchantPhone",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_txHash",
      "type": "bytes32"
     }
    ],
    "name": "getTransaction",
    "outputs": [
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "uint8"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "uint256"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_totalIssuedScore",
      "type": "uint256"
     }
    ],
    "name": "setTotalIssuedScore",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     }
    ],
    "name": "getMerchantInfo",
    "outputs": [
     {
      "name": "",
      "type": "address"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "uint256"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_managerAddr",
      "type": "address"
     },
     {
      "name": "_phone",
      "type": "string"
     },
     {
      "name": "_password",
      "type": "string"
     }
    ],
    "name": "registerManager",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getMerchantPhones",
    "outputs": [
     {
      "name": "",
      "type": "bytes32[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_totalSettledScore",
      "type": "uint256"
     }
    ],
    "name": "setTotalSettledScore",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     },
     {
      "name": "_password",
      "type": "string"
     }
    ],
    "name": "loginMerchant",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_goodId",
      "type": "bytes32"
     },
     {
      "name": "_goodName",
      "type": "bytes32"
     },
     {
      "name": "_goodPrice",
      "type": "uint256"
     },
     {
      "name": "_merchantAddr",
      "type": "address"
     }
    ],
    "name": "setGood",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_customerAddr",
      "type": "address"
     },
     {
      "name": "_phone",
      "type": "string"
     },
     {
      "name": "_password",
      "type": "string"
     }
    ],
    "name": "registerCustomer",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getTransactions",
    "outputs": [
     {
      "name": "",
      "type": "bytes32[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getCustomerPhones",
    "outputs": [
     {
      "name": "",
      "type": "bytes32[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_customerPhones",
      "type": "string"
     }
    ],
    "name": "setCustomerPhones",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_merchantAddrs",
      "type": "address[]"
     }
    ],
    "name": "setMerchantAddrs",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     }
    ],
    "name": "getManagerInfo",
    "outputs": [
     {
      "name": "",
      "type": "address"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "uint256"
     },
     {
      "name": "",
      "type": "uint256"
     },
     {
      "name": "",
      "type": "uint256"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getOwner",
    "outputs": [
     {
      "name": "",
      "type": "address"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getAge",
    "outputs": [
     {
      "name": "",
      "type": "uint256"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getGoods",
    "outputs": [
     {
      "name": "",
      "type": "bytes32[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_merchantAddr",
      "type": "address"
     },
     {
      "name": "_phone",
      "type": "bytes32"
     },
     {
      "name": "_password",
      "type": "bytes32"
     },
     {
      "name": "_score",
      "type": "uint256"
     },
     {
      "name": "_sellGoods",
      "type": "bytes32[]"
     }
    ],
    "name": "setMerchant",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_merchantAddr",
      "type": "address"
     },
     {
      "name": "_phone",
      "type": "string"
     },
     {
      "name": "_password",
      "type": "string"
     }
    ],
    "name": "registerMerchant",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     },
     {
      "name": "_password",
      "type": "string"
     }
    ],
    "name": "loginManager",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_managerPhones",
      "type": "bytes32[]"
     }
    ],
    "name": "setManagerPhones",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getTotalSettledScore",
    "outputs": [
     {
      "name": "",
      "type": "uint256"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_merchantAddr",
      "type": "address"
     }
    ],
    "name": "getMerchant",
    "outputs": [
     {
      "name": "",
      "type": "address"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "uint256"
     },
     {
      "name": "",
      "type": "bytes32[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_managerAddr",
      "type": "address"
     },
     {
      "name": "_phone",
      "type": "bytes32"
     },
     {
      "name": "_password",
      "type": "bytes32"
     },
     {
      "name": "_issuedScore",
      "type": "uint256"
     }
    ],
    "name": "setManager",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_merchantPhones",
      "type": "bytes32[]"
     }
    ],
    "name": "setMerchantPhones",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     }
    ],
    "name": "getGoodsByMerchant",
    "outputs": [
     {
      "name": "",
      "type": "bytes32[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_customerAddr",
      "type": "address"
     }
    ],
    "name": "getCustomer",
    "outputs": [
     {
      "name": "",
      "type": "address"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "uint256"
     },
     {
      "name": "",
      "type": "bytes32[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_goods",
      "type": "bytes32[]"
     }
    ],
    "name": "setGoods",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_txHash",
      "type": "bytes32"
     },
     {
      "name": "_txType",
      "type": "uint8"
     },
     {
      "name": "_sender",
      "type": "string"
     },
     {
      "name": "_receiver",
      "type": "string"
     },
     {
      "name": "_score",
      "type": "uint256"
     }
    ],
    "name": "addTransaction",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_age",
      "type": "uint256"
     }
    ],
    "name": "setAge",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_senderType",
      "type": "uint256"
     },
     {
      "name": "_sender",
      "type": "string"
     },
     {
      "name": "_receiver",
      "type": "string"
     },
     {
      "name": "_score",
      "type": "uint256"
     }
    ],
    "name": "transferScore",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_managerPhone",
      "type": "string"
     },
     {
      "name": "_customerPhone",
      "type": "string"
     },
     {
      "name": "_score",
      "type": "uint256"
     }
    ],
    "name": "issueScore",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_merchantPhone",
      "type": "bytes32"
     }
    ],
    "name": "getMerchantPhone",
    "outputs": [
     {
      "name": "",
      "type": "address"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     },
     {
      "name": "_goodId",
      "type": "string"
     }
    ],
    "name": "buyGood",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [
     {
      "name": "_goodId",
      "type": "bytes32"
     }
    ],
    "name": "getGood",
    "outputs": [
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "bytes32"
     },
     {
      "name": "",
      "type": "uint256"
     },
     {
      "name": "",
      "type": "address"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getManagerAddrs",
    "outputs": [
     {
      "name": "",
      "type": "address[]"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": true,
    "inputs": [],
    "name": "getTotalIssuedScore",
    "outputs": [
     {
      "name": "",
      "type": "uint256"
     }
    ],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_managerPhone",
      "type": "bytes32"
     },
     {
      "name": "_managerAddr",
      "type": "address"
     }
    ],
    "name": "setManagerPhone",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "constant": false,
    "inputs": [
     {
      "name": "_phone",
      "type": "string"
     },
     {
      "name": "_password",
      "type": "string"
     }
    ],
    "name": "loginCustomer",
    "outputs": [],
    "payable": false,
    "type": "function"
   },
   {
    "inputs": [],
    "type": "constructor"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "RegisterManager",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "LoginManager",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "RegisterCustomer",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "LoginCustomer",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "RegisterMerchant",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "LoginMerchant",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "IssueScore",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "SettleScore",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "TransferScore",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "AddGood",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     },
     {
      "indexed": false,
      "name": "goodPrice",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "merchantPhone",
      "type": "bytes32"
     }
    ],
    "name": "BuyGood",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "statusCode",
      "type": "uint256"
     },
     {
      "indexed": false,
      "name": "message",
      "type": "string"
     }
    ],
    "name": "AddTransaction",
    "type": "event"
   },
   {
    "anonymous": false,
    "inputs": [
     {
      "indexed": false,
      "name": "sender",
      "type": "address"
     },
     {
      "indexed": false,
      "name": "age",
      "type": "uint256"
     }
    ],
    "name": "SetAge",
    "type": "event"
   }
  ],
  "userDoc": {
   "methods": {}
  },
  "developerDoc": {
   "methods": {}
  }
 }
}